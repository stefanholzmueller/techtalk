package java8;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertThat;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.function.Predicate;

import org.junit.Before;
import org.junit.Test;

public class Lambdas {

	private static List<String> list;

	@Before
	public void setUp() {
		list = new ArrayList<String>();
		list.add("");
		list.add("a");
		list.add("b");
		list.add("");
		list.add("c");
	}

	@Test
	public void test1() {
		for (Iterator<String> iterator = list.iterator(); iterator.hasNext();) {
			String str = iterator.next();
			if (str.isEmpty()) {
				iterator.remove();
			}
		}
		assertThat(list, is(Arrays.asList("a", "b", "c")));
	}

	private static <T> void removeIf(Collection<T> coll, Predicate<T> pred) {
		for (Iterator<T> iterator = coll.iterator(); iterator.hasNext();) {
			T t = iterator.next();
			if (pred.test(t)) {
				iterator.remove();
			}
		}
	}

	// interface Predicate<T> {
	// boolean test(T t);
	// }

	@Test
	public void test2() {
		removeIf(list, new Predicate<String>() {
			@Override
			public boolean test(String str) {
				// TODO Auto-generated method stub
				return false;
			}
		});
		assertThat(list, is(Arrays.asList("a", "b", "c")));
	}

	@Test
	public void test3() {
		list.removeIf(str -> {
			return str.isEmpty();
		});
		assertThat(list, is(Arrays.asList("a", "b", "c")));
	}

}
